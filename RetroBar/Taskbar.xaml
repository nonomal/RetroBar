<appbar:AppBarWindow x:Class="RetroBar.Taskbar"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:RetroBar.Controls"
        xmlns:converters="clr-namespace:RetroBar.Converters"
        xmlns:utilities="clr-namespace:RetroBar.Utilities"
        xmlns:appbar="clr-namespace:ManagedShell.AppBar;assembly=ManagedShell.AppBar"
        Title="{DynamicResource retrobar_title}"
        Left="0"
        LocationChanged="Taskbar_OnLocationChanged"
        SizeChanged="Taskbar_OnSizeChanged"
        MouseLeftButtonDown="Taskbar_OnMouseLeftButtonDown"
        MouseMove="Taskbar_MouseMove"
        Deactivated="Taskbar_Deactivated"
        AllowDrop="True"
        Style="{DynamicResource TaskbarWindow}">
    <Window.Resources>
        <ResourceDictionary>
            <converters:BoolToTextRenderingModeConverter x:Key="textRenderingModeConverter" />
            <converters:SettingsToTextFormattingModeConverter x:Key="textFormattingModeConverter" />
            <converters:EdgeOrientationConverter x:Key="edgeOrientationConverter" />
            <converters:DockOrientationConverter x:Key="dockOrientationConverter" />
            <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
            <MenuItem x:Shared="false" x:Key="ToolbarsItem" Header="{DynamicResource toolbars}">
                <MenuItem Header="{DynamicResource quick_launch}" IsCheckable="true" IsChecked="{Binding Source={x:Static utilities:Settings.Instance}, Path=ShowQuickLaunch, UpdateSourceTrigger=PropertyChanged}" />
                <Separator />
                <MenuItem Header="{DynamicResource new_toolbar}" x:Name="NewToolbarMenuItem" />
            </MenuItem>
            <MenuItem x:Shared="false" x:Key="SetTimeMenuItem" Header="{DynamicResource set_time}" Click="SetTimeMenuItem_OnClick" FontWeight="{DynamicResource SetTimeMenuItemWeight}" />
            <MenuItem x:Shared="false" x:Key="CustomizeNotificationsMenuItem" Header="{DynamicResource customize_notifications_menu}" Click="CustomizeNotificationsMenuItem_OnClick" />
            <MenuItem x:Shared="false" x:Key="TaskManagerMenuItem" Style="{DynamicResource TaskManMenuItem}" Click="TaskManagerMenuItem_OnClick" />
            <MenuItem x:Shared="false" x:Key="LockTaskbarMenuItem" Header="{DynamicResource lock_taskbar_menu}" IsCheckable="True" IsChecked="{Binding Source={x:Static utilities:Settings.Instance}, Path=LockTaskbar, UpdateSourceTrigger=PropertyChanged}" />
            <MenuItem x:Shared="false" x:Key="PropertiesMenuItem" Header="{DynamicResource tray_properties}" Click="PropertiesMenuItem_OnClick" />
            <MenuItem x:Shared="false" x:Key="ExitMenuItem" Header="{DynamicResource exit_retrobar}" Click="ExitMenuItem_OnClick" Visibility="{Binding Source={x:Static utilities:Settings.Instance}, Path=ShowExitMenuItem, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource boolToVisibilityConverter}}" />
        </ResourceDictionary>
    </Window.Resources>
    <TextOptions.TextFormattingMode>
        <MultiBinding Converter="{StaticResource textFormattingModeConverter}" UpdateSourceTrigger="PropertyChanged">
            <Binding Source="{x:Static utilities:Settings.Instance}" Path="TaskbarScale"/>
            <Binding Source="{x:Static utilities:Settings.Instance}" Path="AllowFontSmoothing"/>
        </MultiBinding>
    </TextOptions.TextFormattingMode>
    <TextOptions.TextRenderingMode>
        <Binding Source="{x:Static utilities:Settings.Instance}"
                 Path="AllowFontSmoothing"
                 Converter="{StaticResource textRenderingModeConverter}" />
    </TextOptions.TextRenderingMode>
    <ContentControl Style="{DynamicResource Taskbar}" x:Name="TaskbarContentControl">
        <ContentControl.LayoutTransform>
            <ScaleTransform x:Name="TaskbarScaleTransform"
                            ScaleX="{Binding Source={x:Static utilities:Settings.Instance}, Path=TaskbarScale}"
                            ScaleY="{Binding Source={x:Static utilities:Settings.Instance}, Path=TaskbarScale}"
                            CenterX="0"
                            CenterY="0" />
        </ContentControl.LayoutTransform>
        <DockPanel>
            <Button Visibility="Collapsed" x:Name="FocusDummyButton" />
            <controls:StartButton x:Name="StartButton"
                                  Host="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <DockPanel.Dock>
                    <Binding Converter="{StaticResource dockOrientationConverter}"
                             ConverterParameter="leading"
                             Path="Orientation"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                </DockPanel.Dock>
            </controls:StartButton>
            <controls:Toolbar x:Name="QuickLaunchToolbar"
                              Visibility="Collapsed"
                              Path="{Binding Source={x:Static utilities:Settings.Instance}, Path=QuickLaunchPath}">
                <DockPanel.Dock>
                    <Binding Converter="{StaticResource dockOrientationConverter}"
                             ConverterParameter="leading"
                             Path="Orientation"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                </DockPanel.Dock>
            </controls:Toolbar>
            <controls:ShowDesktopButton x:Name="ShowDesktopButtonTray"
                                        TasksService="{Binding TasksService}"
                                        Visibility="Collapsed">
                <DockPanel.Dock>
                    <Binding Converter="{StaticResource dockOrientationConverter}"
                             ConverterParameter="trailing"
                             Path="Orientation"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                </DockPanel.Dock>
            </controls:ShowDesktopButton>
            <GroupBox Style="{DynamicResource Tray}">
                <GroupBox.ContextMenu>
                    <ContextMenu>
                        <!--StaticResourceExtension ResourceKey="ToolbarsItem" />
                        <Separator /-->
                        <StaticResourceExtension ResourceKey="SetTimeMenuItem" />
                        <StaticResourceExtension ResourceKey="CustomizeNotificationsMenuItem" />
                        <Separator />
                        <StaticResourceExtension ResourceKey="TaskManagerMenuItem" />
                        <Separator />
                        <StaticResourceExtension ResourceKey="LockTaskbarMenuItem" />
                        <StaticResourceExtension ResourceKey="PropertiesMenuItem" />
                        <StaticResourceExtension ResourceKey="ExitMenuItem" />
                    </ContextMenu>
                </GroupBox.ContextMenu>
                <DockPanel.Dock>
                    <Binding Converter="{StaticResource dockOrientationConverter}"
                             ConverterParameter="trailing"
                             Path="Orientation"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                </DockPanel.Dock>
                <StackPanel>
                    <StackPanel.Orientation>
                        <Binding Converter="{StaticResource edgeOrientationConverter}"
                                 Path="Orientation"
                                 RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                    </StackPanel.Orientation>
                    <controls:NotifyIconList NotificationArea="{Binding NotificationArea}" />
                    <controls:Clock VerticalAlignment="Center" />
                </StackPanel>
            </GroupBox>
            <controls:InputLanguage VerticalAlignment="Stretch"
                                     HorizontalAlignment="Stretch">
                <DockPanel.Dock>
                    <Binding Converter="{StaticResource dockOrientationConverter}"
                             ConverterParameter="trailing"
                             Path="Orientation"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Window}" />
                </DockPanel.Dock>
            </controls:InputLanguage>
            <controls:TaskList VerticalAlignment="Stretch"
                               Host="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                               Tasks="{Binding Tasks}"></controls:TaskList>
        </DockPanel>
    </ContentControl>
    <appbar:AppBarWindow.ContextMenu>
        <ContextMenu Opened="ContextMenu_Opened">
            <!-- TODO: Add when desk bands and additional taskbars are supported. -->
            <!--StaticResourceExtension ResourceKey="ToolbarsItem" />
            <Separator /-->
            <StaticResourceExtension ResourceKey="TaskManagerMenuItem" />
            <Separator />
            <MenuItem x:Name="UpdateAvailableMenuItem"
                      Header="{DynamicResource update_available}"
                      Click="UpdateAvailableMenuItem_OnClick"
                      FontWeight="Bold"
                      Visibility="Collapsed" />
            <StaticResourceExtension ResourceKey="LockTaskbarMenuItem" />
            <StaticResourceExtension ResourceKey="PropertiesMenuItem" />
            <StaticResourceExtension ResourceKey="ExitMenuItem" />
        </ContextMenu>
    </appbar:AppBarWindow.ContextMenu>
</appbar:AppBarWindow>
